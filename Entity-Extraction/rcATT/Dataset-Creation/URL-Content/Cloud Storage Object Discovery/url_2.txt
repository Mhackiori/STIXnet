List Blobs The List Blobs operation returns a list of the blobs under the specified container. Request The List Blobs request may be constructed as follows. HTTPS is recommended. Replace myaccount with the name of your storage account: |Method||Request URI||HTTP Version| |HTTP/1.1| Emulated storage service URI When making a request against the emulated storage service, specify the emulator hostname and Blob service port as 127.0.0.1:10000, followed by the emulated storage account name: |Method||Request URI||HTTP Version| |HTTP/1.1| For more information, see Using the Azure Storage Emulator for Development and Testing. URI Parameters The following additional parameters may be specified on the URI. |Parameter||Description| |Optional. Filters the results to return only blobs whose names begin with the specified prefix.| |Optional. When the request includes this parameter, the operation returns a | |Optional. A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. | The marker value is opaque to the client. |Optional. Specifies the maximum number of blobs to return, including all | Setting |Optional. Specifies one or more datasets to include in the response: | - - - - - - - - - - - To specify more than one of these options on the URI, you must separate each option with a URL-encoded comma ("%82"). |Optional. Version 2020-08-04 and newer. Only for accounts with Hierarchical Namespace enabled. When a request includes this parameter, the list only contains soft deleted blobs. If include=deleted is also specified, the request will fail with Bad Request (400).| |Optional. The | Request Headers The following table describes required and optional request headers. |Request Header||Description| |Required. Specifies the authorization scheme, account name, and signature. For more information, see Authorize requests to Azure Storage.| |Required. Specifies the Coordinated Universal Time (UTC) for the request. For more information, see Authorize requests to Azure Storage.| |Required for all authorized requests, optional for anonymous requests. Specifies the version of the operation to use for this request. For more information, see Versioning for the Azure Storage Services.| |Optional. Provides a client-generated, opaque value with a 1 KiB character limit that is recorded in the analytics logs when storage analytics logging is enabled. Using this header is highly recommended for correlating client-side activities with requests received by the server. For more information, see About Storage Analytics Logging and Azure Logging: Using Logs to Track Storage Requests.| |Optional. Valid only when a hierarchical namespace is enabled for the account and include=permissions is provided in the request. If true, the user identity values returned in the <Owner>, <Group>, and <Acl> fields will be transformed from Azure Active Directory object IDs to user principal names. If false, the values will be returned as Azure Active Directory object IDs. The default value is false. Note that group and application object IDs are not translated because they do not have unique friendly names.| Request Body None. Sample Request See Enumerating Blob Resources for a sample request. Response The response includes an HTTP status code, a set of response headers, and a response body in XML format. Status Code A successful operation returns status code 200 (OK). For information about status codes, see Status and Error Codes. Response Headers The response for this operation includes the following headers. The response may also include additional standard HTTP headers. All standard headers conform to the HTTP/1.1 protocol specification. |Response header||Description| |Specifies the format in which the results are returned. Currently this value is | |This header uniquely identifies the request that was made and can be used for troubleshooting the request. For more information, see Troubleshooting API Operations.| |Indicates the version of the Blob service used to execute the request. This header is returned for requests made using version 2009-09-19 and newer. | This header is also returned for anonymous requests without a version specified if the container was marked for public access using the 2009-09-19 version of the Blob service. |A UTC date/time value generated by the service that indicates the time at which the response was initiated.| |This header can be used to troubleshoot requests and corresponding responses. The value of this header is equal to the value of the | Response Body The format of the XML response is as follows. Note that the Prefix, Marker, MaxResults, and Delimiter elements are present only if they were specified on the request URI. The NextMarker element has a value only if the list results are not complete. Snapshots, blob metadata, and uncommitted blobs are included in the response only if they are specified with the include parameter on the request URI. In version 2009-09-19 and newer, the blob's properties are encapsulated within a Properties element. Beginning with version 2009-09-19, List Blobs returns the following renamed elements in the response body: Last-Modified(previously LastModified) Content-Length(previously Size) Content-Type(previously ContentType) Content-Encoding(previously ContentEncoding) Content-Language(previously ContentLanguage) The Content-MD5 element appears for blobs created with version 2009-09-19 and newer. In version 2012-02-12 and newer, the Blob service calculates the Content-MD5 value when you upload a blob using Put Blob, but does not calculate this when you create a blob using Put Block List. You can explicitly set the Content-MD5 value when you create the blob, or by calling Put Block List or Set Blob Properties operations. For versions from 2009-09-19 and newer but prior to version 2015-02-21, calling List Blobs on a container that includes append blobs will fail with status code 409 (FeatureVersionMismatch) if the result of listing contains an append blob. LeaseState and LeaseDuration appear only in version 2012-02-12 and later. CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, and CopyStatusDescription only appear in version 2012-02-12 and later, when this operation includes the include={copy} parameter. These elements do not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. These elements also do not appear with a blob created by Copy Blob before version 2012-02-12. In version 2013-08-15 and newer, the EnumerationResults element contains a ServiceEndpoint attribute specifying the blob endpoint, and a ContainerName field specifying the name of the container. In previous versions these two attributes were combined together in the ContainerName field. Also in version 2013-08-15 and newer, the Url element under Blob has been removed. For version 2015-02-21 and above, List Blobs returns blobs of all types (block, page, and append blobs). For version 2015-12-11 and above, List Blobs returns the ServerEncrypted element. This element is set to true if the blob and application metadata are completely encrypted, and false otherwise. For version 2016-05-31 and above, List Blobs returns the IncrementalCopy element for incremental copy blobs and snapshots with the value set to true. For version 2017-04-17 and above, List Blobs returns the AccessTier element if an access tier has been explicitly set. For a list of allowed premium page blob tiers, see High-performance Premium Storage and managed disks for VMs. For Blob Storage or General Purpose v2 accounts, valid values are Hot/ Cool/ Archive. If the blob is in rehydrate pending state then ArchiveStatus element is returned with one of the valid values rehydrate-pending-to-hot/ rehydrate-pending-to-cool. For detailed information about block blob tiering see Hot, cool and archive storage tiers. For version 2017-04-17 and above, List Blobs returns the AccessTierInferred element on Blob Storage or General Purpose v2 accounts. If the block blob does not have the access tier set then we infer tier from storage account properties and this value is set to true. This header is present only if the tier is inferred from the account property. For detailed information about block blob tiering see Hot, cool and archive storage tiers. For version 2017-04-17 and above, List Blobs returns the AccessTierChangeTime element on Blob Storage or General Purpose v2 accounts. This is returned only if tier on block blob was ever set. The date format follows RFC 1123. For more information, see Representation of Date-Time Values in Headers. For detailed information about block blob tiering see Hot, cool and archive storage tiers. For version 2017-07-29 and above, Deleted, DeletedTime and RemainingRetentionDays appear when this operation includes the include={deleted} parameter. These elements do not appear if this blob was not deleted. These elements appear for blob or snapshot that are deleted with DELETE operation when soft delete feature was enabled. Deleted element is set to true for blobs and snapshots that are soft deleted. Deleted-Time corresponds to time when the blob was deleted. RemainingRetentionDays indicates number of days after which soft deleted blob will be permanently deleted by blob service. For version 2017-11-09 and above, Creation-Time returns the time at which this blob was created. For version 2019-02-02 and above, List Blobs returns the CustomerProvidedKeySha256 element if the blob is encrypted with a customer-provided key. The value will be set to the SHA-256 hash of the key used to encrypt the blob. Additionally, if the operation includes the include={metadata} parameter and there is application metadata present on a blob encrypted with a customer-provided key, the Metadata element will have an Encrypted="true" attribute to indicate that the blob has metadata which cannot be decrypted as part of the List Blobs operation. Call Get Blob Properties or Get Blob Metadata with the customer-provided key to access the metadata for these blobs. For version 2019-02-02 and above, List Blobs returns the EncryptionScope element if the blob is encrypted with an encryption scope. The value will be set to the name of the encryption scope used to encrypt the blob. If the operation includes the include={metadata} parameter, application metadata on the blob will be transparently decrypted and available in the Metadata element. For version 2019-12-12 and above, List Blobs returns the RehydratePriority element on Blob Storage or General Purpose v2 accounts if object is in rehydrate pending state. Valid values are High/ Standard. For detailed information about block blob tiering see Hot, cool and archive storage tiers. For version 2019-12-12 and above, List Blobs returns the VersionId element for blobs and generated blob versions when Versioning is enabled on the account. For version 2019-12-12 and above, List Blobs returns the IsCurrentVersion element for the current version of the blob with the value set to true, to differentiate it from the read-only automatically generated versions. For version 2019-12-12 and above, List Blobs returns the TagCount element for blobs with any tags. The Tags element appears only when this operation includes the include={tags} parameter. These elements do not appear if there are no tags on the blob. For version 2019-12-12 and above, List Blobs returns the Sealed element for Append Blobs. The Sealed element appears only when the Append blob has been sealed. These elements do not appear if the Append Blob is not sealed. For version 2020-02-10 and above, List Blobs returns the LastAccessTime element. The elements shows when the blob's data was last accessed according to the storage account's last access time tracking policy. The element will not be returned if the storage account does not have a last access time tracking policy, or the policy is disabled. For information about setting account's last access time tracking policy, see Blob Service API. The LastAccessTime element does not track the last time when the blob's metadata is accessed. For version 2020-06-12 and above, List Blobs returns the ImmutabilityPolicyUntilDate and ImmutabilityPolicyMode elements when this operation includes the include={immutabilitypolicy} parameter. For version 2020-06-12 and above, List Blobs returns the LegalHold element when this operation includes the include={legalhold} parameter. For version 2020-06-12 and above, for accounts with a hierarchical namespace enabled, List Blobs returns Owner, Group, Permissions and Acl element when the request contains include={permissions} parameter. Note that Acl element will be a combined list of Access and Default Acl's that were set on the file/directory. For version 2020-08-04 and above, for Hierarchical Namespace enabled accounts, List Blobs returns the DeletionId element for deleted blobs. DeletionId is an unsigned 64 bit identifier that uniquely identifies a soft deleted path to distinguish it from other deleted blobs with the same path. For version 2020-10-02 and above, for Hierarchical Namespace enabled accounts, List Blobs returns the ResourceType property element for the path, which can be either file/ directory. For version 2021-02-12 and above, List Blobs will percent-encode (per RFC 2396) all Blob Name or BlobPrefix Name element values which contain characters invalid in XML (specifically, U+FFFE or U+FFFF). If encoded, the Name element will include an Encoded=true attribute. Note that this will only occur for the Name element values containing the characters invalid in XML, not the remaining Name elements in the response. <?xml version="1.0" encoding="utf-8"?> <EnumerationResults ServiceEndpoint="http://myaccount.blob.core.windows.net/" ContainerName="mycontainer"> <Prefix>string-value</Prefix> <Marker>string-value</Marker> <MaxResults>int-value</MaxResults> <Delimiter>string-value</Delimiter> <Blobs> <Blob> <Name>blob-name</name> <Snapshot>date-time-value</Snapshot> <VersionId>date-time-vlue</VersionId> <IsCurrentVersion>true</IsCurrentVersion> <Deleted>true</Deleted> <Properties> <Creation-Time>date-time-value</Creation-Time> <Last-Modified>date-time-value</Last-Modified> <Etag>etag</Etag> <Owner>owner user id</Owner> <Group>owning group id</Group> <Permissions>permission string</Permissions> <Acl>access control list</Acl> <ResourceType>file | directory</ResourceType> <Content-Length>size-in-bytes</Content-Length> <Content-Type>blob-content-type</Content-Type> <Content-Encoding /> <Content-Language /> <Content-MD5 /> <Cache-Control /> <x-ms-blob-sequence-number>sequence-number</x-ms-blob-sequence-number> <BlobType>BlockBlob|PageBlob|AppendBlob</BlobType> <AccessTier>tier</AccessTier> <LeaseStatus>locked|unlocked</LeaseStatus> <LeaseState>available | leased | expired | breaking | broken</LeaseState> <LeaseDuration>infinite | fixed</LeaseDuration> <CopyId>id</CopyId> <CopyStatus>pending | success | aborted | failed </CopyStatus> <CopySource>source url</CopySource> <CopyProgress>bytes copied/bytes total</CopyProgress> <CopyCompletionTime>datetime</CopyCompletionTime> <CopyStatusDescription>error string</CopyStatusDescription> <ServerEncrypted>true</ServerEncrypted> <CustomerProvidedKeySha256>encryption-key-sha256</CustomerProvidedKeySha256> <EncryptionScope>encryption-scope-name</EncryptionScope> <IncrementalCopy>true</IncrementalCopy> <AccessTierInferred>true</AccessTierInferred> <AccessTierChangeTime>datetime</AccessTierChangeTime> <DeletedTime>datetime</DeletedTime> <RemainingRetentionDays>no-of-days</RemainingRetentionDays> <TagCount>number of tags between 1 to 10</TagCount> <RehydratePriority>rehydrate priority</RehydratePriority> </Properties> <Metadata> <Name>value</Name> </Metadata> <Tags> <TagSet> <Tag> <Key>TagName</Key> <Value>TagValue</Value> </Tag> </TagSet> </Tags> <OrMetadata /> </Blob> <BlobPrefix> <Name>blob-prefix</Name> </BlobPrefix> </Blobs> <NextMarker /> </EnumerationResults> Sample Response See Enumerating Blob Resources for a sample response. Authorization If the container's access control list (ACL) is set to allow anonymous access to the container, any client may call this operation. Otherwise, this operation can be called by the account owner and by anyone with a Shared Access Signature that has permission to list blobs in a container. Remarks Blob Properties in the Response If you have requested that uncommitted blobs be included in the enumeration, note that some properties are not set until the blob is committed, so some properties may not be returned in the response. The x-ms-blob-sequence-number element is only returned for page blobs. The OrMetadata element is only returned for block blobs. For page blobs, the value returned in the Content-Length element corresponds to the value of the blob's x-ms-blob-content-length header. The Content-MD5 element appears in the response body only if it has been set on the blob using version 2009-09-19 or later. You can set the Content-MD5 property when the blob is created or by calling Set Blob Properties. In version 2012-02-12 and newer, Put Blob sets a block blob’s MD5 value even when the Put Blob request doesn’t include an MD5 header. Metadata in the Response The Metadata element is present only if the include=metadata parameter was specified on the URI. Within the Metadata element, the value of each name-value pair is listed within an element corresponding to the pair's name. Note that metadata requested with this parameter must be stored in accordance with the naming restrictions imposed by the 2009-09-19 version of the Blob service. Beginning with this version, all metadata names must adhere to the naming conventions for C# identifiers. If a metadata name-value pair violates the naming restrictions enforced by the 2009-09-19 version, the response body indicates the problematic name within an x-ms-invalid-name element, as shown in the following XML fragment: … <Metadata> <MyMetadata1>first value</MyMetadata1> <MyMetadata2>second value</MyMetadata2> <x-ms-invalid-name>invalid-metadata-name</x-ms-invalid-name> </Metadata> … Tags in the Response The Tags element is present only if the include=tags parameter was specified on the URI and if there are tags on the blob. Within the TagSet element, up to 10 Tag elements are returned, each containing the key and value of the user-defined Blob Index tags. The ordering of tags is not guaranteed in the response. The Tags and TagCount elements are not returned if there are no tags on the blob. The storage service maintains strong consistency between a blob and its tags, but the secondary index is eventually consistent. Tags may be visible in a response to List Blobs before they are visible to Find Blobs by Tags operations. Snapshots in the Response Snapshots are listed in the response only if the include=snapshots parameter was specified on the URI. Snapshots listed in the response do not include the LeaseStatus element, as snapshots cannot have active leases. If you call List Blobs with a delimiter, you cannot also include snapshots in the enumeration. A request that includes both returns an InvalidQueryParameter error (HTTP status code 400 – Bad Request). Uncommitted Blobs in the Response Uncommitted blobs are listed in the response only if the include=uncommittedblobs parameter was specified on the URI. Uncommitted blobs listed in the response do not include any of the following elements: Last-Modified Etag Content-Type Content-Encoding Content-Language Content-MD5 Cache-Control Metadata Deleted Blobs in the Response Deleted blobs are listed in the response only if the include=deleted parameter was specified on the URI. Deleted blobs listed in the response do not include the Lease elements as deleted blobs cannot have active leases. Deleted snapshots are included in list response if include=deleted,snapshot was specified on the URI. Object Replication Metadata in the Response The OrMetadata element is present when an Object Replication policy has been evaluated on a blob and the List Blobs call was made using version 2019-12-12 or later. Within the OrMetadata element, the value of each name-value pair is listed within an element corresponding to the pair's name. The format of name is or-{policy-id}_{rule-id}, where {policy-id} is a guid representing the object replication policy identifier on the storage account and {rule-id} is a guid representing the rule identifier on the storage container. Valid values are complete/ failed. … <OrMetadata> <or-e524bba7-4323-4b93-91f8-d09d5d0b7057_d86c51de-ef02-4264-bdcf-dcd389a6c7ac>complete</or-e524bba7-4323-4b93-91f8-d09d5d0b7057_d86c51de-ef02-4264-bdcf-dcd389a6c7ac> <or-2b302b5d-fcd5-44d6-a5ed-455bf27e17ea_4a398ff5-2a89-4090-879b-10248f23428e>failed</or-2b302b5d-fcd5-44d6-a5ed-455bf27e17ea_4a398ff5-2a89-4090-879b-10248f23428e> </OrMetadata> … Immutability Policy in the Response The ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode elements are present only if the include=immutabilitypolicy parameter was specified on the URI. <Properties> <ImmutabilityPolicyUntilDate>date-time-value</ImmutabilityPolicyUntilDate> <ImmutabilityPolicyMode>unlocked | locked </ImmutabilityPolicyMode> </Properties> Legal Hold in the Response The LegalHold element is present only if the include=legalhold parameter was specified on the URI. <Properties> <LegalHold>true | false </LegalHold> </Properties> Returning Result Sets Using a Marker Value If you specify a value for the maxresults parameter and the number of blobs to return exceeds this value, or exceeds the default value for maxresults, the response body will contain a NextMarker element that indicates the next blob to return on a subsequent request. In certain cases, the service may return the NextMarker element even though the number of results returned is less than the value of maxresults. To return the next set of items, specify the value of NextMarker as the marker parameter on the URI for the subsequent request. Note that the value of NextMarker should be treated as opaque. Using a Delimiter to Traverse the Blob Namespace The delimiter parameter enables the caller to traverse the blob namespace by using a user-configured delimiter. In this way, you can traverse a virtual hierarchy of blobs as though it were a file system. The delimiter may be a single character or a string. When the request includes this parameter, the operation returns a BlobPrefix element. The BlobPrefix element is returned in place of all blobs whose names begin with the same substring up to the appearance of the delimiter character. The value of the BlobPrefix element is substring+delimiter, where substring is the common substring that begins one or more blob names, and delimiter is the value of the delimiter parameter. You can use the value of BlobPrefix to make a subsequent call to list the blobs that begin with this prefix, by specifying the value of BlobPrefix for the prefix parameter on the request URI. Note that each BlobPrefix element returned counts toward the maximum result, just as each Blob element does. Blobs are listed in alphabetical order in the response body, with upper-case letters listed first. Copy errors in CopyStatusDescription CopyStatusDescription contains more information about the Copy Blob failure. When a copy attempt fails and the Blob service is still retrying the operation, CopyStatusis set to pending, and the CopyStatusDescriptiontext describes the failure that may have occurred during the last copy attempt. When CopyStatusis set to failed, the CopyStatusDescriptiontext describes the error that caused the copy operation to fail. The following table describes the three fields of every CopyStatusDescription value. |Component||Description| |HTTP status code||Standard 3-digit integer specifying the failure.| |Error code||Keyword describing error that is provided by Azure in the <ErrorCode> element. If no <ErrorCode> element appears, a keyword containing standard error text associated with the 3-digit HTTP status code in the HTTP specification is used. See Common REST API Error Codes.| |Information||Detailed description of failure, in quotes.| The following table describes the CopyStatus and CopyStatusDescription values of common failure scenarios. Important Description text shown here can change without warning, even without a version change, so do not rely on matching this exact text. |Scenario||CopyStatus value||CopyStatusDescription value| |Copy operation completed successfully.||success||empty| |User aborted copy operation before it completed.||aborted||empty| |A failure occurred when reading from the source blob during a copy operation, but the operation will be retried.||pending||502 BadGateway "Encountered a retryable error when reading the source. Will retry. Time of failure: <time>"| |A failure occurred when writing to the destination blob of a copy operation, but the operation will be retried.||pending||500 InternalServerError "Encountered a retryable error. Will retry. Time of failure: <time>"| |An unrecoverable failure occurred when reading from the source blob of a copy operation.||failed||404 ResourceNotFound "Copy failed when reading the source." Note: When reporting this underlying error, Azure returns | |The timeout period limiting all copy operations elapsed. (Currently the timeout period is 2 weeks.)||failed||500 OperationCancelled "The copy exceeded the maximum allowed time."| |The copy operation failed too often when reading from the source, and didn’t meet a minimum ratio of attempts to successes. (This timeout prevents retrying a very poor source over 2 weeks before failing).||failed||500 OperationCancelled "The copy failed when reading the source."| See also Status and Error Codes Blob Service Error Codes