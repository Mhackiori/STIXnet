DeviceAdminInfo public final class DeviceAdminInfo extends Object implements Parcelable |java.lang.Object| |â†³||android.app.admin.DeviceAdminInfo| This class is used to specify meta information of a device administrator component. Summary Constants A type of policy that this device admin can use: require encryption of stored data. A type of policy that this device admin can use: disables use of all device cameras. A type of policy that this device admin can use: disables use of keyguard features. A type of policy that this device admin can use: force the user to change their password after an administrator-defined time limit. A type of policy that this device admin can use: able to force the device to lock via A type of policy that this device admin can use: limit the passwords that the user can select, via A type of policy that this device admin can use: able to reset the user's password via A type of policy that this device admin can use: able to watch login attempts from the user, via A type of policy that this device admin can use: able to factory reset the device, erasing all of the user's data, via Inherited constants From interface Fields Used to make this class parcelable. Public constructors Constructor. Public methods Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. Return the raw information about the receiver implementing this device admin. Return the component of the receiver that implements this device admin. Return the .apk package that implements this device admin. Return the class name of the receiver component that implements this device admin. Return the XML tag name for the given policy identifier. Returns whether this device admin would like to be visible to the user, even when it is not enabled. Load user-visible description associated with this device admin. Load the user-displayed icon for this device admin. Load the user-displayed label for this device admin. Return true if this administrator can be a target in an ownership transfer. Returns a string representation of the object. Return true if the device admin has requested that it be able to use the given policy control. Used to package this object into a Inherited methods From class From interface Constants USES_ENCRYPTED_STORAGE public static final int USES_ENCRYPTED_STORAGE A type of policy that this device admin can use: require encryption of stored data. To control this policy, the device admin must have a "encrypted-storage" tag in the "uses-policies" section of its meta-data. Constant Value: 7 (0x00000007) USES_POLICY_DISABLE_CAMERA public static final int USES_POLICY_DISABLE_CAMERA A type of policy that this device admin can use: disables use of all device cameras. To control this policy, the device admin must be a device owner or profile owner, and must have a "disable-camera" tag in the "uses-policies" section of its meta-data. If used by a device owner, the policy affects all users on the device. Constant Value: 8 (0x00000008) USES_POLICY_DISABLE_KEYGUARD_FEATURES public static final int USES_POLICY_DISABLE_KEYGUARD_FEATURES A type of policy that this device admin can use: disables use of keyguard features. To control this policy, the device admin must be a device owner or profile owner, and must have a "disable-keyguard-features" tag in the "uses-policies" section of its meta-data. If used by a device owner, the policy only affects the primary user and its profiles, but not any secondary users on the device. Constant Value: 9 (0x00000009) USES_POLICY_EXPIRE_PASSWORD public static final int USES_POLICY_EXPIRE_PASSWORD A type of policy that this device admin can use: force the user to change their password after an administrator-defined time limit. To control this policy, the device admin must be a device owner or profile owner, and must have an "expire-password" tag in the "uses-policies" section of its meta-data. If used by a device owner, the policy only affects the primary user and its profiles, but not any secondary users on the device. Constant Value: 6 (0x00000006) USES_POLICY_FORCE_LOCK public static final int USES_POLICY_FORCE_LOCK A type of policy that this device admin can use: able to force the device to lock via DevicePolicyManager#lockNow or limit the maximum lock timeout for the device via DevicePolicyManager#setMaximumTimeToLock. To control this policy, the device admin must have a "force-lock" tag in the "uses-policies" section of its meta-data. Constant Value: 3 (0x00000003) USES_POLICY_LIMIT_PASSWORD public static final int USES_POLICY_LIMIT_PASSWORD A type of policy that this device admin can use: limit the passwords that the user can select, via DevicePolicyManager#setPasswordQuality and DevicePolicyManager#setPasswordMinimumLength. To control this policy, the device admin must be a device owner or profile owner, and must have a "limit-password" tag in the "uses-policies" section of its meta-data. If used by a device owner, the policy only affects the primary user and its profiles, but not any secondary users on the device. Constant Value: 0 (0x00000000) USES_POLICY_RESET_PASSWORD public static final int USES_POLICY_RESET_PASSWORD A type of policy that this device admin can use: able to reset the user's password via DevicePolicyManager#resetPassword. To control this policy, the device admin must have a "reset-password" tag in the "uses-policies" section of its meta-data. Constant Value: 2 (0x00000002) USES_POLICY_WATCH_LOGIN public static final int USES_POLICY_WATCH_LOGIN A type of policy that this device admin can use: able to watch login attempts from the user, via DeviceAdminReceiver#ACTION_PASSWORD_FAILED, DeviceAdminReceiver#ACTION_PASSWORD_SUCCEEDED, and DevicePolicyManager#getCurrentFailedPasswordAttempts. To control this policy, the device admin must have a "watch-login" tag in the "uses-policies" section of its meta-data. Constant Value: 1 (0x00000001) USES_POLICY_WIPE_DATA public static final int USES_POLICY_WIPE_DATA A type of policy that this device admin can use: able to factory reset the device, erasing all of the user's data, via DevicePolicyManager#wipeData. To control this policy, the device admin must have a "wipe-data" tag in the "uses-policies" section of its meta-data. Constant Value: 4 (0x00000004) Fields CREATOR public static final Creator<DeviceAdminInfo> CREATOR Used to make this class parcelable. Public constructors DeviceAdminInfo public DeviceAdminInfo (Context context, ResolveInfo resolveInfo) Constructor. |Parameters| |Throws| Public methods describeContents public int describeContents () Describe the kinds of special objects contained in this Parcelable instance's marshaled representation. For example, if the object will include a file descriptor in the output of writeToParcel(android.os.Parcel, int), the return value of this method must include the CONTENTS_FILE_DESCRIPTOR bit. |Returns| |a bitmask indicating the set of special object types marshaled by this Parcelable object instance. Value is either | dump public void dump (Printer pw, String prefix) |Parameters| getActivityInfo public ActivityInfo getActivityInfo () Return the raw information about the receiver implementing this device admin. Do not modify the returned object. |Returns| getComponent public ComponentName getComponent () Return the component of the receiver that implements this device admin. |Returns| |This value cannot be | getPackageName public String getPackageName () Return the .apk package that implements this device admin. |Returns| getReceiverName public String getReceiverName () Return the class name of the receiver component that implements this device admin. |Returns| getTagForPolicy public String getTagForPolicy (int policyIdent) Return the XML tag name for the given policy identifier. Valid identifiers are as per usesPolicy(int). If the given identifier is not known, null is returned. |Parameters| |Returns| isVisible public boolean isVisible () Returns whether this device admin would like to be visible to the user, even when it is not enabled. |Returns| loadDescription public CharSequence loadDescription (PackageManager pm) Load user-visible description associated with this device admin. |Parameters| |Returns| |Throws| loadIcon public Drawable loadIcon (PackageManager pm) Load the user-displayed icon for this device admin. |Parameters| |Returns| loadLabel public CharSequence loadLabel (PackageManager pm) Load the user-displayed label for this device admin. |Parameters| |Returns| supportsTransferOwnership public boolean supportsTransferOwnership () Return true if this administrator can be a target in an ownership transfer. |Returns| toString public String toString () Returns a string representation of the object. In general, the toString method returns a string that "textually represents" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method. The toString method for class Object returns a string consisting of the name of the class of which the object is an instance, the at-sign character ` @', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of: getClass().getName() + '@' + Integer.toHexString(hashCode()) |Returns| |a string representation of the object.| usesPolicy public boolean usesPolicy (int policyIdent) Return true if the device admin has requested that it be able to use the given policy control. The possible policy identifier inputs are: USES_POLICY_LIMIT_PASSWORD, USES_POLICY_WATCH_LOGIN, USES_POLICY_RESET_PASSWORD, USES_POLICY_FORCE_LOCK, USES_POLICY_WIPE_DATA, USES_POLICY_EXPIRE_PASSWORD, USES_ENCRYPTED_STORAGE, USES_POLICY_DISABLE_CAMERA. |Parameters| |Returns| writeToParcel public void writeToParcel (Parcel dest, int flags) Used to package this object into a Parcel. |Parameters|