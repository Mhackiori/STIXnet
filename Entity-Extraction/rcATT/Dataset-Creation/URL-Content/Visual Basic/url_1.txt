Visual Basic support planned for .NET 5.0 .NET Team We’ve heard your feedback that you want Visual Basic on .NET Core. Earlier versions of .NET Core supported Class Library and Console applications types. Starting with .NET 5 Visual Basic will support: - Class Library - Console - Windows Forms - WPF - Worker Service - ASP.NET Core Web API We are supporting these application types to provide a good path forward for the existing VB customer who want to migrate their applications to .NET Core. This allows Visual Basic customers to take advantage of new platform features like side-by-side deployment, cross platform support, performance and new API improvements. One of the major benefits of using Visual Basic is that the language has been stable for a very long time. The significant number of programmers using Visual Basic demonstrates that its stability and descriptive style is valued. Going forward, we do not plan to evolve Visual Basic as a language. This supports language stability and maintains compatibility between the .NET Core and .NET Framework versions of Visual Basic. Future features of .NET Core that require language changes may not be supported in Visual Basic. Due to differences in the platform, there will be some differences between Visual Basic on .NET Framework and .NET Core. If you are happy with .NET Framework, you can be confident that it will remain supported as long as Windows is supported because it is shipped with the OS. Both Visual Basic and C# customers can continue to use .NET Framework and need to port to .NET Core only if you want features like those listed above. If your application uses technologies that aren’t supported on .NET Core, like WebForms, Workflow or WCF, you might want to stay on .NET Framework because porting will require work to move to newer technologies. Visual Studio regularly adds new features to improve the experience for developers, including those using Visual Basic and either .NET Core or .NET Framework. An example is the recent addition of IntelliCode for Visual Basic. Visual Basic is a great language and a productive development environment. The future of Visual Basic will include both .NET Framework and .NET Core and will focus on stability, the application types listed above, and compatibility between the .NET Core and .NET Framework versions of Visual Basic. After so long we started to have signs of falling from VB.net in the TIOBE index. https://prnt.sc/wh88iq – (But Microsoft’s lack of respect and commitment to VB is sure to affect its reputation in other products.) See the example of VB6 is a dialect ahead of its time, requires much less ceremonies and paraphernalia (it was discontinued and VB net too) but ROI is in charge in the world. If the money is where we can complicate then why make it easy? see the market that languages derived from “C” generate, much more doubts, consequently more need for paid support, more courses to be sold and so on. Evolving a language that is easy to understand is to cure a sick person but the best deal is to sell medicine. If a lie is repeated by everyone several times then it will become a truth. Python is the best ===== modinha Descendants of “C” is the future ==== so it will be! “Microsoft with this attitude that you have every day of turning everything into a legacy, soon no one else will believe you, so the legacy will be Microsoft itself.” Can you imagine a group of professionals saying that Mirosoft is not reliable and the best thing that any professional should do is to use another non-proprietary company? what will happen? if a lot of people in the world speak repeatedly it will become true. Keeping a team of two to three people dedicated to VB.net seems to me to be smarter and cheaper than facing an image crisis by people who will say that Microsoft is unreliable and does not respect its customers very well because of ROI . It is a very small cost to avoid such great wear. Respect VB6, VB.net, VBA customers more, after all the VB family has always been a success for Microsoft! Agreed. this comment has been deleted. I need visual basic to be alive -_- The official version was released today. Why only add Windows Forms? dfg .Net 5.0 is out now – where is support for VB.Net?????? I can’t find the WPF! The console can create WPF, but visual studio has no template I’m disappointed. this comment has been deleted. I think all developers around the world hate Microsoft except Visual Basic developers, Microsoft hate Visual Basic developers, .NET Team is insane or something worst. Where is “What’s new in Visual Basic 15.9” ? – from 15.5. VB.NET is completely abandoned? It’s no use with .NET Core 3.x. It’s no use with .NET 5. The silence gets more deafening every day. The last anouncement was made on March 11th, we’re almost 9 months later, the time it takes for a baby to grow, .NET 5.0 has been released, but still nothing. What have you guys been doing for the last 9 months ? Do we not at least deserve some feedback ? Dear VB Guys, C# 9 language features are not that difficult to implement in VB.NET (as projected by the MS team) but MS made it very clear that they are not going to invest further in enhancing the language and VS tooling support. If you are still hopeful about MS will listen to your voice then you are beating a dead horse! More than MS, we invested more in VB.net in terms of time, efforts in learning, developing, & maintaining the app. We believed in MS’s fake promise to keep the VB.NET language as a first-class citizen. We have hit on our own foot. Not enhancing the language and VS tooling support is a clear indication that MS is discouraging all VB developer to stop using VB on the .Net Core platform. I am afraid about the next release of .NET. Ver 6 will introduce breaking changes to an extent that VB will become incompatible to take advantage of .Net 6 features. if i have to learn a new programming language it will certainly not be from Microsoft, i no longer trust this company, for me the legacy is Microsoft itself. I am a VB.net customer, above all I am a BASIC customer, if I cannot be here it will be elsewhere! just to name a few B4X possibilities; VBMercury; Xojo; RADBasic. I will do the same. You guys have had 2 decades to learn C#. @Nathaniel Walker my interest in using the MS stack is solely due to VB.NET VISUAL BASIC .NET UN GRAN Y ESPECTACULAR LENGUAJE DE PROGRAMACION 微软承诺在.NET5.0中支持 ASP.NET CORE WEBAPI，为什么官方没有提供，开源社区中提供的工具都能支持了，提供一个模板就这么难吗？在6.0版本中才支持吗？为什么不添加对移动开发的支持？ I wish a HAPPY NEW YEAR to all lovers, supporters, developers and communities of our beloved programming language VISUAL BASIC. I want a HAPPY NEW YEAR SPECIAL TO YOU VB and that in 2021 you can continue giving us a lot of joy, competence, productivity and satisfaction, I wish you a full year and evolution and continuity! Never forget, you can always count on me I LOVE YOU VISUAL BASIC. VB.Net is easier to code and maintain than #C because of the following reasons: 1. Case Sensitivity. In C# you have to carefully watch every variable name to ensure that you do not accidentally use the wrong case. In VB.Net you never need to worry about that as the IDE fixes the case for you. Screwball errors related to case are not possible in VB.Net. 2. Syntactical Doodads. In C# you need to use {} and ; in order to segment your code blocks. In VB.Net you need only drop to the next line. This makes the code in VB.Net less verbose, and easier to read, and introduces few places where a missing doodad could cause problems. 3. Plain English Syntax. Visual Basic has always been focused on Plain English Syntax from the beginning in order to make the language easier to learn, easier to code and easier to read. C# … not so much. Overall, VB.Net is bound to produce fewer coding flaws because of these three aspects. The increased chance of errors in C# due purely to design features such as case sensitivity will naturally aggregate into a higher failure rate for C# software vs. VB.Net. VB.Net is easier to code, easier to learn, and easier to read. Why Microsoft wants to eliminate this superior language is a mystery. I would recommend Microsoft reconsider. Stick with your strengths. Visual Basic was what made Microsoft the predominant company it became because many corporations calculated that the ease of development meant a higher ROI for their internal development teams. It was the ease of use that made it a winner. Don’t abandon that principal, Microsoft. It has won you a top tier position. Maintain your position. Support VB.Net. In addition, originally Microsoft promised that the .Net framework would support VB.Net and C# equally. Keep your promises, Microsoft. You’ll be glad you did. 请不要放弃vb，继续升级，因为这个语言代码清晰，易学易用可以在短时间内，快速开发想要的程序，在大数据与AI时代，我不认为vb这门语言比其他语言差太多，要是能把教程资料多放一点出来就更加完美了，希望这门语言能走上顶峰，成为其他语言无法到达的新高度。 1. Ignorable. The IDE will basically complete this or spell check it. 2. Ignorable. No different than Then, End If, etc. 3. Not everyone is an English Speaker. This is part of the reason why many prefer not to use BASIC. Not every language shares the same etymologies and grammar as English. This point is going to be hwavily biased based on what languahe you speak, or how proficient you are with English. C# is fine. VB is a waste of investment and Microsoft are right to put it on ice. VB developers have now had 2 whole decades to learn C# The excuses are getting old. I no longer have empathy or sympathy. strange analysis, Python is first, doesn’t use {}; and is based in English. There are times to complain and there are times to thank. Watch the video and leave your like. it is very important that DEV VB.NET participates and supports the effort of the entire VB team https://www.youtube.com/watch?v=0lRVGI4eTmg&list=PLdo4fOcmZ0oUQ42lnr4bDYfStYe_5rKS0&index=3 That video does suggest to me that Microsoft is making a sincere effort in to keep VB going – so that’s good news to me and I thank Microsoft for doing that video. But, I really wish they they would look at VB differently because, at least to me, Microsoft put VB on the map! They really need to seize this opportunity to view VB as asset that they can grab the majority of it’s market share and not a burden – because it has so much potential to gain more and more programmers because the language is so easy to learn, yet just as powerful as others. For example look at this other opportunity that Microsoft had: 1996 Palm devices introduced – used a stylus to navigate the device’s UI. 2000 Microsoft releases Pocket PC’s, also required a stylus to navigate the UI 2007 Apple releases the iPhone – navigate the UI with just your finger! (Notice that the iPhone came out SEVEN years after the Pocket PC) Now imagine if Microsoft created the Pocket PC with a capacitive touch screen and told programmers to create the UI of their app’s to use big buttons, etc so that people could simply use their finger instead of needing a stylus? Would the iPhone even exist if this had happened? That was a huge opportunity that Microsoft fumbled on 🙁 I just hope they don’t do it with VB. @John C Excellent comment! But then again, I predict in 5 years AI will be the main creator of apps/software (you just tell the AI what you want), so all languages will become obsolete. Any news on ASP.NET Core Web API? It’s great that support for WinForms is here but after a year of waiting it would be great if there were at least news about the other project types. Just in time for the New Year July 16th…Live on track and as secure as ever!!!! Impressive……….!#~ the year was 0 and now is 1 encounting on 186 days at a 3 bit of 164bit executable parsing latency and back to standard binary .1 at a time in a forward direction!! I almost dont want to account how long its going to take to remake a calander that will really match up to new years 1 full 365 year for Christmas and the new years! oh no, please tell us windows 11 will come with New Powerful support of visual Basic Dot net 6 You can Run your App in anywhere, Easy To learn, … now There is too many Books about visual basic more than C# and F# there is Bill Gates talk about Visual basic and how to easy create apps Cutest programming language for ever I already have my fingers crossed Well, we have to move on! Thankfully we can always go on with VB if we so wish. In my opinion, this is perhaps the best moment ever for VB.NET to move forward and show that it should and deserves to always be among the top 5 programming languages in the world! I’m gonna explain. VB.NET is open source, right? This is already just fantastic, we honestly have to be grateful to Microsoft for bringing VB here! But now what’s missing? • Greater interaction, integration and willingness from the VB.NET community is lacking, I believe that Microsoft most of the time should feel frustrated with the lack of participation and activity of VB developers in their press releases and articles. As a VB.NET developer, do you have the following habits? 1) Do you answer other people’s questions using VB.NET? Or do you prefer to be popular and respond in another, more popular programming language that is in vogue? 2) Do you speak that your hobby and professional language is VB? 3) Do you actively participate in a community? 4) Do you contribute ideas? 5) Do you share your developments and discoveries? 6) Do you help or participate in library creation? 7) Do you prefer to try to solve your problems with VB or would you prefer to change immediately and use something that is already ready in any other programming language? 8) Do you continue to study VB? That’s exactly what’s missing, the VB developer doesn’t have these habits, so we’re waiting for someone to do it for us, that’s what’s completely different in many other programming languages, they always prefer and try to solve everything first with their language of choice. Many complaints look like this: We can’t use Blazor… What does the Community (we) create as an alternative? We are no longer RAD… What have we done to change this? There is no documentation for VB.NET… Have you ever tried to assemble some and share? There is not enough example for VB.NET…. Have you tried using your knowledge and translating some examples into VB? We don’t have a tool like Django… So why don’t we create one for ourselves? Other developers say that VB is not a language for professionals… Do you believe that too? If the community wants we can create anything, compilers, IDE, VB_Script, that is, anything. If this mentality starts today we will be born giants! Microsoft has already left a huge universe ready for developers, companies, governments all ready, we just need to continue. Do you visit these sites at least once a week? “https://” devblogs.microsoft.com/vbteam/ github.com/dotnet/vblang gitter.im/VB-NET/community?source=orgpage (>>Cyrus Najmabadi this one) github.com/dotnet/docs/tree/main/samples/snippets/visualbasic docs.microsoft.com/en-us/answers/topics/dotnet-visual-basic.html “www” vbforums.com/ tutlane.com/tutorial/visual-basic “http://” vbcity.com/ VB.NET also arrived here with super powers Where would be the main site to bring together all VB developers in one place? Answer – (“https://”)gitter.im/VB-NET/community?source=orgpage (>>How about we start here.<<) Oops! Before closing your browser is there no one you can share this information with? How about starting now with change! Thank you very much and Gratitude 🙂 最开始接触编程就是vb，后来用过python，我的感觉是他们很像。请继续支持vb，发展vb，移动端开发也能用vb。在中国会vb的很多，也许他们并不用来做主要开发，但vb在中国很有基础。