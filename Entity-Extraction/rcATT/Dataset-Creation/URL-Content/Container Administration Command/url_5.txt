docker exec Description Run a command in a running container Usage $ docker exec [OPTIONS] CONTAINER COMMAND [ARG...] Extended description The docker exec command runs a new command in a running container. The command started using docker exec only runs while the container’s primary process ( PID 1) is running, and it is not restarted if the container is restarted. COMMAND will run in the default directory of the container. If the underlying image has a custom directory specified with the WORKDIR directive in its Dockerfile, this will be used instead. COMMAND should be an executable, a chained or a quoted command will not work. Example: docker exec -ti my_container "echo a && echo b" will not work, but docker exec -ti my_container sh -c "echo a && echo b" will. For example uses of this command, refer to the examples section below. Options |Name, shorthand||Default||Description| |Detached mode: run command in the background| |Override the key sequence for detaching a container| |API 1.25+ | Set environment variables |API 1.25+ | Read in a file of environment variables |Keep STDIN open even if not attached| |Give extended privileges to the command| |Allocate a pseudo-TTY| |Username or UID (format: <name|uid>[:<group|gid>])| |API 1.35+ | Working directory inside the container Examples Run docker exec on a running container First, start a container. $ docker run --name ubuntu_bash --rm -i -t ubuntu bash This will create a container named ubuntu_bash and start a Bash session. Next, execute a command on the container. $ docker exec -d ubuntu_bash touch /tmp/execWorks This will create a new file /tmp/execWorks inside the running container ubuntu_bash, in the background. Next, execute an interactive bash shell on the container. $ docker exec -it ubuntu_bash bash This will create a new Bash session in the container ubuntu_bash. Next, set an environment variable in the current bash session. $ docker exec -it -e VAR=1 ubuntu_bash bash This will create a new Bash session in the container ubuntu_bash with environment variable $VAR set to “1”. Note that this environment variable will only be valid on the current Bash session. By default docker exec command runs in the same working directory set when container was created. $ docker exec -it ubuntu_bash pwd / You can select working directory for the command to execute into $ docker exec -it -w /root ubuntu_bash pwd /root Try to run docker exec on a paused container If the container is paused, then the docker exec command will fail with an error: $ docker pause test test $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 1ae3b36715d2 ubuntu:latest "bash" 17 seconds ago Up 16 seconds (Paused) test $ docker exec test ls FATA[0000] Error response from daemon: Container test is paused, unpause the container before exec $ echo $? 1 Parent command |Command||Description| |docker||The base command for the Docker CLI.|