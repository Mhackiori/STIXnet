The World of JScript, JavaScript, ECMAScript … Change is inevitable, except from vending machines – a quote from an unknown source but so true. With the release of the Visual J# 2.0 Redist-SE over, the time has come for me to change and look for bigger and brighter challenges. I recently moved to the JScript team at Microsoft IDC. So yes, that would mean going ahead you would read quite a bit on the same at my blogs. Here is a short summary of a few definitions: JScript is Microsoft’s implementation of the ECMAScript scripting language. JScript is implemented as a Windows Script engine, which means it can be "plugged in" to any application that supports Windows Script, such as Internet Explorer, Active Server Pages, and Windows Script Host. JScript was first supported in Internet Explorer browser 3.0 and typical file extension of JScript source code files is .js. Got you, but then what is ECMAScript? ECMAScript is a scripting programming language, standardized by Ecma International in the ECMA-262 specification. There are three editions of ECMA-262 published, and the work on the fourth edition is in progress. ECMAScript is supported in many applications, especially web browsers where it is is often referred to as JavaScript or JScript. The various dialects typically include their own, different standard libraries, of which some are standardized separately – such as the W3C-specified DOM. Some implementations, of the same have a completely different set of libraries. This means that applications written in one dialect of ECMAScript will not likely work in another, unless they are designed to be compatible What is JavaScript? How is it different from JScript? "JavaScript" is actually Netscape Communications Corporation's (and now the Mozilla Foundation's) implementation of the ECMAScript standard. In addition to other internal implementation differences, the existing version of JScript uses non-generational mark-and-sweep garbage collection whereas JavaScript (the original implementation of which is the SpiderMonkey engine) uses a generational mark-and-sweep system. Note: Though people often use JScript and JavaScript interchangeably, which is because of the fact that these languages are very similar, it is important to note that neither of them is a simplified version of Java as some may think. Other than incomplete syntactic resemblance and the fact that both JScript/JavaScript and Java can provide executable content in web browsers, the two languages are unrelated. Would follow up with more soon …