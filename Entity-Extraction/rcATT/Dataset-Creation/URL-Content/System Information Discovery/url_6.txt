Virtual Machines - Get Retrieves information about the model view or the instance view of a virtual machine. GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}?api-version=2021-11-01 GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}?$expand={$expand}&api-version=2021-11-01 URI Parameters |Name||In||Required||Type||Description| resource |path||True| The name of the resource group. subscription |path||True| Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. vm |path||True| The name of the virtual machine. api-version |query||True| Client Api Version. $expand |query| The expand expression to apply on the operation. 'InstanceView' retrieves a snapshot of the runtime properties of the virtual machine that is managed by the platform and can change outside of control plane operations. 'UserData' retrieves the UserData property as part of the VM model view that was provided by the user during the VM Create/Update operation. Responses |Name||Type||Description| |200 OK| OK |Other Status Codes| Error response describing why the operation failed. Security azure_auth Azure Active Directory OAuth2 Flow Type: oauth2 Flow: implicit Authorization URL: https://login.microsoftonline.com/common/oauth2/authorize Scopes |Name||Description| |user_impersonation||impersonate your user account| Examples |Get a virtual machine placed on a dedicated host group through automatic placement| |Get a virtual machine with VM Size Properties| |Get a Virtual Machine.| Get a virtual machine placed on a dedicated host group through automatic placement Sample Request GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2021-11-01 Sample Response { "name": "myVM", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM", "type": "Microsoft.Compute/virtualMachines", "location": "West US", "tags": { "myTag1": "tagValue1" }, "properties": { "vmId": "0f47b100-583c-48e3-a4c0-aefc2c9bbcc1", "hostGroup": { "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/hostGroups/myHostGroup" }, "hardwareProfile": { "vmSize": "Standard_D2s_v3" }, "storageProfile": { "imageReference": { "publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2016-Datacenter", "version": "latest" }, "osDisk": { "osType": "Windows", "name": "myOsDisk", "createOption": "FromImage", "caching": "ReadWrite", "managedDisk": { "storageAccountType": "Premium_LRS", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myOsDisk" }, "diskSizeGB": 30 }, "dataDisks": [] }, "osProfile": { "computerName": "myVM", "adminUsername": "admin", "windowsConfiguration": { "provisionVMAgent": true, "enableAutomaticUpdates": false }, "secrets": [] }, "networkProfile": { "networkInterfaces": [ { "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{myNIC}" } ] }, "provisioningState": "Succeeded" } } Get a virtual machine with VM Size Properties Sample Request GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2021-11-01 Sample Response { "name": "myVM", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM", "type": "Microsoft.Compute/virtualMachines", "location": "West US", "tags": { "myTag1": "tagValue1" }, "properties": { "vmId": "0f47b100-583c-48e3-a4c0-aefc2c9bbcc1", "availabilitySet": { "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/availabilitySets/my-AvailabilitySet" }, "hardwareProfile": { "vmSize": "Standard_DS3_v2", "vmSizeProperties": { "vCPUsAvailable": 1, "vCPUsPerCore": 1 } }, "storageProfile": { "imageReference": { "publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2016-Datacenter", "version": "latest" }, "osDisk": { "osType": "Windows", "name": "myOsDisk", "createOption": "FromImage", "caching": "ReadWrite", "managedDisk": { "storageAccountType": "Premium_LRS", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myOsDisk" }, "diskSizeGB": 30 }, "dataDisks": [ { "lun": 0, "name": "myDataDisk0", "createOption": "Empty", "caching": "ReadWrite", "managedDisk": { "storageAccountType": "Premium_LRS", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myDataDisk0" }, "diskSizeGB": 30 }, { "lun": 1, "name": "myDataDisk1", "createOption": "Attach", "caching": "ReadWrite", "managedDisk": { "storageAccountType": "Premium_LRS", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myDataDisk1" }, "diskSizeGB": 100 } ] }, "applicationProfile": { "galleryApplications": [ { "tags": "myTag1", "order": 1, "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdb/resourceGroups/myresourceGroupName2/providers/Microsoft.Compute/galleries/myGallery1/applications/MyApplication1/versions/1.0", "configurationReference": "https://mystorageaccount.blob.core.windows.net/configurations/settings.config" }, { "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdg/resourceGroups/myresourceGroupName3/providers/Microsoft.Compute/galleries/myGallery2/applications/MyApplication2/versions/1.1" } ] }, "userData": "RXhhbXBsZSBVc2VyRGF0YQ==", "osProfile": { "computerName": "myVM", "adminUsername": "admin", "windowsConfiguration": { "provisionVMAgent": true, "enableAutomaticUpdates": false }, "secrets": [] }, "networkProfile": { "networkInterfaces": [ { "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{myNIC}" } ] }, "diagnosticsProfile": { "bootDiagnostics": { "enabled": true, "storageUri": "http://{myStorageAccount}.blob.core.windows.net" } }, "extensionsTimeBudget": "PT50M", "provisioningState": "Succeeded" }, "resources": [ { "name": "CustomScriptExtension-DSC", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM/extensions/CustomScriptExtension-DSC", "type": "Microsoft.Compute/virtualMachines/extensions", "location": "west us", "tags": { "displayName": "CustomScriptExtension-DSC" }, "properties": { "autoUpgradeMinorVersion": true, "provisioningState": "Succeeded", "publisher": "Microsoft.Compute", "type": "CustomScriptExtension", "typeHandlerVersion": "1.9", "settings": {} } } ] } Get a Virtual Machine. Sample Request GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2021-11-01 Sample Response { "name": "myVM", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM", "type": "Microsoft.Compute/virtualMachines", "location": "West US", "tags": { "myTag1": "tagValue1" }, "properties": { "vmId": "0f47b100-583c-48e3-a4c0-aefc2c9bbcc1", "availabilitySet": { "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/availabilitySets/my-AvailabilitySet" }, "proximityPlacementGroup": { "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/proximityPlacementGroups/my-ppg01" }, "hardwareProfile": { "vmSize": "Standard_DS3_v2" }, "storageProfile": { "imageReference": { "publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2016-Datacenter", "version": "latest" }, "osDisk": { "osType": "Windows", "name": "myOsDisk", "createOption": "FromImage", "caching": "ReadWrite", "managedDisk": { "storageAccountType": "Premium_LRS", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myOsDisk" }, "diskSizeGB": 30 }, "dataDisks": [ { "lun": 0, "name": "myDataDisk0", "createOption": "Empty", "caching": "ReadWrite", "managedDisk": { "storageAccountType": "Premium_LRS", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myDataDisk0" }, "diskSizeGB": 30 }, { "lun": 1, "name": "myDataDisk1", "createOption": "Attach", "caching": "ReadWrite", "managedDisk": { "storageAccountType": "Premium_LRS", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myDataDisk1" }, "diskSizeGB": 100 } ] }, "applicationProfile": { "galleryApplications": [ { "tags": "myTag1", "order": 1, "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdb/resourceGroups/myresourceGroupName2/providers/Microsoft.Compute/galleries/myGallery1/applications/MyApplication1/versions/1.0", "configurationReference": "https://mystorageaccount.blob.core.windows.net/configurations/settings.config" }, { "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdg/resourceGroups/myresourceGroupName3/providers/Microsoft.Compute/galleries/myGallery2/applications/MyApplication2/versions/1.1" } ] }, "userData": "RXhhbXBsZSBVc2VyRGF0YQ==", "osProfile": { "computerName": "myVM", "adminUsername": "admin", "windowsConfiguration": { "provisionVMAgent": true, "enableAutomaticUpdates": false }, "secrets": [] }, "networkProfile": { "networkInterfaces": [ { "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{myNIC}" } ] }, "diagnosticsProfile": { "bootDiagnostics": { "enabled": true, "storageUri": "http://{myStorageAccount}.blob.core.windows.net" } }, "extensionsTimeBudget": "PT50M", "provisioningState": "Succeeded", "timeCreated": "2021-06-27T01:02:38.3138469+00:00" }, "resources": [ { "name": "CustomScriptExtension-DSC", "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM/extensions/CustomScriptExtension-DSC", "type": "Microsoft.Compute/virtualMachines/extensions", "location": "west us", "tags": { "displayName": "CustomScriptExtension-DSC" }, "properties": { "autoUpgradeMinorVersion": true, "provisioningState": "Succeeded", "publisher": "Microsoft.Compute", "type": "CustomScriptExtension", "typeHandlerVersion": "1.9", "settings": {} } } ] } Definitions | Additional | Enables or disables a capability on the virtual machine or virtual machine scale set. | Additional | Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied. | Api | Api error. | Api | Api error base. | Application | Contains the list of gallery applications that should be made available to the VM/VMSS | Available | Describes the properties of an virtual machine instance view for available patch summary. | Billing | Specifies the billing related details of a Azure Spot VM or VMSS. | Boot | Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. | Boot | The instance view of a virtual machine boot diagnostics. | Caching | Gets the caching type. | Capacity | The parameters of a capacity reservation Profile. | Cloud | An error response from the Compute service. | Component | The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup. | Data | Describes a data disk. | Delete | Specify what happens to the network interface when the VM is deleted | Diagnostics | Specifies the boot diagnostic settings state. | Diff | Specifies the ephemeral disk settings for operating system disk. | Diff | Specifies the ephemeral disk placement for operating system disk. This property can be used by user in the request to choose the location i.e, cache disk or resource disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer Ephemeral OS disk size requirements for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements | Diff | Describes the parameters of ephemeral disk settings that can be specified for operating system disk. | Disk | Specifies how the virtual machine should be created. | Disk | Specifies whether OS Disk should be deleted or detached upon VM deletion. | Disk | Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: ForceDetach. | Disk | Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. | Disk | Describes a Encryption Settings for a Disk | Disk | The instance view of the disk. | Extended | The complex type of the extended location. | Extended | The type of the extended location. | Hardware | Specifies the hardware settings for the virtual machine. | Hyper | Specifies the HyperVGeneration Type | Image | Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set. | Inner | Inner error details. | Instance | Instance view status. | Instance | The expand expression to apply on the operation. 'InstanceView' retrieves a snapshot of the runtime properties of the virtual machine that is managed by the platform and can change outside of control plane operations. 'UserData' retrieves the UserData property as part of the VM model view that was provided by the user during the VM Create/Update operation. |IPVersions| Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'. | Key | Describes a reference to Key Vault Key | Key | Describes a reference to Key Vault Secret | Last | Describes the properties of the last installed patch summary. | Linux | Specifies the Linux operating system settings on the virtual machine. | Linux | Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine. | Linux | Specifies settings related to VM Guest Patching on Linux. | Linux | Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible. | Maintenance | The Last Maintenance Operation Result Code. | Maintenance | Maintenance Operation Status. | Managed | The parameters of a managed disk. | Network | specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations | Network | Describes a network interface reference. | Network | Specifies the network interfaces or the networking configuration of the virtual machine. | Operating | The operating system of the osDiskImage. |OSDisk| Specifies information about the operating system disk used by the virtual machine. |OSProfile| Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned. | Pass | The pass name. Currently, the only allowable value is OobeSystem. | Patch | The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings." | Patch | Specifies settings related to VM Guest Patching on Windows. |Plan| Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save. | Protocol | Specifies the protocol of WinRM listener. | Public | Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible. | Public | Specify public IP sku name | Public | Specify public IP sku tier | Public | Specify the public IP allocation type | Resource | The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine. | Scheduled | | security | Specifies the EncryptionType of the managed disk. | Security | Specifies the Security profile settings for the virtual machine or virtual machine scale set. | Security | Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. | Setting | Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon. | Ssh | SSH configuration for Linux based VMs running on Azure | Ssh | Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed. | Status | The level code. | Storage | Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk. | Storage | Specifies the storage settings for the virtual machine disks. | Sub | | Terminate | | Uefi | Specifies the security settings like secure boot and vTPM used while creating the virtual machine. | User | The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. | Vault | Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM. | Vault | Describes a set of certificates which are all in the same Key Vault. | Virtual | Describes the uri of a disk. | Virtual | Describes a Virtual Machine. | Virtual | The instance view of the VM Agent running on the virtual machine. | Virtual | Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. | Virtual | Describes a Virtual Machine Extension. | Virtual | The instance view of a virtual machine extension handler. | Virtual | The instance view of a virtual machine extension. | Virtual | The health status of the VM. | Virtual | Identity for the virtual machine. | Virtual | The instance view of a virtual machine. | Virtual | Contains the IP tag associated with the public IP address. | Virtual | Describes a virtual machine network interface configurations. | Virtual | Describes a virtual machines network configuration's DNS settings. | Virtual | Describes a virtual machine network profile's IP configuration. | Virtual | The status of virtual machine patch operations. | Virtual | Specifies the priority for the virtual machine. | Virtual | Describes a virtual machines IP Configuration's PublicIPAddress configuration | Virtual | Describes a virtual machines network configuration's DNS settings. | Virtual | Specifies the size of the virtual machine. | VMDisk | Specifies the security profile settings for the managed disk. | VMGallery | Specifies the required information to reference a compute gallery application version | VMSize | Specifies VM Size Property settings on the virtual machine. | Windows | Specifies Windows operating system settings on the virtual machine. | Windows | Specifies the mode of VM Guest patch assessment for the IaaS virtual machine. | Windows | Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible. | Win | Describes Windows Remote Management configuration of the VM | Win | Describes Protocol and thumbprint of Windows Remote Management listener AdditionalCapabilities Enables or disables a capability on the virtual machine or virtual machine scale set. |Name||Type||Description| |hibernationEnabled| The flag that enables or disables hibernation capability on the VM. |ultraSSDEnabled| The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled. AdditionalUnattendContent Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied. |Name||Type||Description| |componentName| The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup. |content| Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted. |passName| The pass name. Currently, the only allowable value is OobeSystem. |settingName| Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon. ApiError Api error. |Name||Type||Description| |code| The error code. |details| The Api error details |innererror| The Api inner error |message| The error message. |target| The target of the particular error. ApiErrorBase Api error base. |Name||Type||Description| |code| The error code. |message| The error message. |target| The target of the particular error. ApplicationProfile Contains the list of gallery applications that should be made available to the VM/VMSS |Name||Type||Description| |galleryApplications| Specifies the gallery applications that should be made available to the VM/VMSS AvailablePatchSummary Describes the properties of an virtual machine instance view for available patch summary. |Name||Type||Description| |assessmentActivityId| The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs. |criticalAndSecurityPatchCount| The number of critical or security patches that have been detected as available and not yet installed. |error| The errors that were encountered during execution of the operation. The details array contains the list of them. |lastModifiedTime| The UTC timestamp when the operation began. |otherPatchCount| The number of all available patches excluding critical and security. |rebootPending| The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred. |startTime| The UTC timestamp when the operation began. |status| The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings." BillingProfile Specifies the billing related details of a Azure Spot VM or VMSS. Minimum api-version: 2019-03-01. |Name||Type||Description| |maxPrice| Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. BootDiagnostics Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor. |Name||Type||Description| |enabled| Whether boot diagnostics should be enabled on the Virtual Machine. |storageUri| Uri of the storage account to use for placing the console output and screenshot. BootDiagnosticsInstanceView The instance view of a virtual machine boot diagnostics. |Name||Type||Description| |consoleScreenshotBlobUri| The console screenshot blob URI. |serialConsoleLogBlobUri| The serial console log blob Uri. |status| The boot diagnostics status information for the VM. CachingTypes Gets the caching type. |Name||Type||Description| |None| |ReadOnly| |ReadWrite| CapacityReservationProfile The parameters of a capacity reservation Profile. |Name||Type||Description| |capacityReservationGroup| Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details. CloudError An error response from the Compute service. |Name||Type||Description| |error| Api error. ComponentNames The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup. |Name||Type||Description| |Microsoft-Windows-Shell-Setup| DataDisk Describes a data disk. |Name||Type||Description| |caching| Specifies the caching requirements. |createOption| Specifies how the virtual machine should be created. |deleteOption| Specifies whether data disk should be deleted or detached upon VM deletion. |detachOption| Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: ForceDetach. |diskIOPSReadWrite| Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set. |diskMBpsReadWrite| Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set. |diskSizeGB| Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. |image| The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist. |lun| Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. |managedDisk| The managed disk parameters. |name| The disk name. |toBeDetached| Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset |vhd| The virtual hard disk. |writeAcceleratorEnabled| Specifies whether writeAccelerator should be enabled or disabled on the disk. DeleteOptions Specify what happens to the network interface when the VM is deleted |Name||Type||Description| |Delete| |Detach| DiagnosticsProfile Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15. |Name||Type||Description| |bootDiagnostics| Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. DiffDiskOptions Specifies the ephemeral disk settings for operating system disk. |Name||Type||Description| |Local| DiffDiskPlacement Specifies the ephemeral disk placement for operating system disk. This property can be used by user in the request to choose the location i.e, cache disk or resource disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer Ephemeral OS disk size requirements for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements |Name||Type||Description| |CacheDisk| |ResourceDisk| DiffDiskSettings Describes the parameters of ephemeral disk settings that can be specified for operating system disk. NOTE: The ephemeral disk settings can only be specified for managed disk. |Name||Type||Description| |option| Specifies the ephemeral disk settings for operating system disk. |placement| Specifies the ephemeral disk placement for operating system disk. DiskCreateOptionTypes Specifies how the virtual machine should be created. Possible values are: Attach \u2013 This value is used when you are using a specialized disk to create the virtual machine. FromImage \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described. |Name||Type||Description| |Attach| |Empty| |FromImage| DiskDeleteOptionTypes Specifies whether OS Disk should be deleted or detached upon VM deletion. Possible values: Delete If this value is used, the OS disk is deleted when VM is deleted. Detach If this value is used, the os disk is retained after VM is deleted. The default value is set to detach. For an ephemeral OS Disk, the default value is set to Delete. User cannot change the delete option for ephemeral OS Disk. |Name||Type||Description| |Delete| |Detach| DiskDetachOptionTypes Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: ForceDetach. detachOption: ForceDetach is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'. |Name||Type||Description| |ForceDetach| DiskEncryptionSetParameters Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details. |Name||Type||Description| |id| Resource Id DiskEncryptionSettings Describes a Encryption Settings for a Disk |Name||Type||Description| |diskEncryptionKey| Specifies the location of the disk encryption key, which is a Key Vault Secret. |enabled| Specifies whether disk encryption should be enabled on the virtual machine. |keyEncryptionKey| Specifies the location of the key encryption key in Key Vault. DiskInstanceView The instance view of the disk. |Name||Type||Description| |encryptionSettings| Specifies the encryption settings for the OS Disk. |name| The disk name. |statuses| The resource status information. ExtendedLocation The complex type of the extended location. |Name||Type||Description| |name| The name of the extended location. |type| The type of the extended location. ExtendedLocationTypes The type of the extended location. |Name||Type||Description| |EdgeZone| HardwareProfile Specifies the hardware settings for the virtual machine. |Name||Type||Description| |vmSize| Specifies the size of the virtual machine. |vmSizeProperties| Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. HyperVGenerationType Specifies the HyperVGeneration Type |Name||Type||Description| |V1| |V2| ImageReference Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set. |Name||Type||Description| |communityGalleryImageId| Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call. |exactVersion| Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'. |id| Resource Id |offer| Specifies the offer of the platform image or marketplace image used to create the virtual machine. |publisher| The image publisher. |sharedGalleryImageId| Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call. |sku| The image SKU. |version| Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input. InnerError Inner error details. |Name||Type||Description| |errordetail| The internal error message or exception dump. |exceptiontype| The exception type. InstanceViewStatus Instance view status. |Name||Type||Description| |code| The status code. |displayStatus| The short localizable label for the status. |level| The level code. |message| The detailed status message, including for alerts and error messages. |time| The time of the status. InstanceViewTypes The expand expression to apply on the operation. 'InstanceView' retrieves a snapshot of the runtime properties of the virtual machine that is managed by the platform and can change outside of control plane operations. 'UserData' retrieves the UserData property as part of the VM model view that was provided by the user during the VM Create/Update operation. |Name||Type||Description| |instanceView| |userData| IPVersions Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'. |Name||Type||Description| |IPv4| |IPv6| KeyVaultKeyReference Describes a reference to Key Vault Key |Name||Type||Description| |keyUrl| The URL referencing a key encryption key in Key Vault. |sourceVault| The relative URL of the Key Vault containing the key. KeyVaultSecretReference Describes a reference to Key Vault Secret |Name||Type||Description| |secretUrl| The URL referencing a secret in a Key Vault. |sourceVault| The relative URL of the Key Vault containing the secret. LastPatchInstallationSummary Describes the properties of the last installed patch summary. |Name||Type||Description| |error| The errors that were encountered during execution of the operation. The details array contains the list of them. |excludedPatchCount| The number of all available patches but excluded explicitly by a customer-specified exclusion list match. |failedPatchCount| The count of patches that failed installation. |installationActivityId| The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs. |installedPatchCount| The count of patches that successfully installed. |lastModifiedTime| The UTC timestamp when the operation began. |maintenanceWindowExceeded| Describes whether the operation ran out of time before it completed all its intended actions |notSelectedPatchCount| The number of all available patches but not going to be installed because it didn't match a classification or inclusion list entry. |pendingPatchCount| The number of all available patches expected to be installed over the course of the patch installation operation. |startTime| The UTC timestamp when the operation began. |status| The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings." LinuxConfiguration Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see Linux on Azure-Endorsed Distributions. |Name||Type||Description| |disablePasswordAuthentication| Specifies whether password authentication should be disabled. |patchSettings| [Preview Feature] Specifies settings related to VM Guest Patching on Linux. |provisionVMAgent| Indicates whether virtual machine agent should be provisioned on the virtual machine. |ssh| Specifies the ssh key configuration for a Linux OS. LinuxPatchAssessmentMode Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine. Possible values are: ImageDefault - You control the timing of patch assessments on a virtual machine. AutomaticByPlatform - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. |Name||Type||Description| |AutomaticByPlatform| |ImageDefault| LinuxPatchSettings Specifies settings related to VM Guest Patching on Linux. |Name||Type||Description| |assessmentMode| Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine. |patchMode| Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible. LinuxVMGuestPatchMode Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible. Possible values are: ImageDefault - The virtual machine's default patching configuration is used. AutomaticByPlatform - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true |Name||Type||Description| |AutomaticByPlatform| |ImageDefault| MaintenanceOperationResultCodeTypes The Last Maintenance Operation Result Code. |Name||Type||Description| |MaintenanceAborted| |MaintenanceCompleted| |None| |RetryLater| MaintenanceRedeployStatus Maintenance Operation Status. |Name||Type||Description| |isCustomerInitiatedMaintenanceAllowed| True, if customer is allowed to perform Maintenance. |lastOperationMessage| Message returned for the last Maintenance Operation. |lastOperationResultCode| The Last Maintenance Operation Result Code. |maintenanceWindowEndTime| End Time for the Maintenance Window. |maintenanceWindowStartTime| Start Time for the Maintenance Window. |preMaintenanceWindowEndTime| End Time for the Pre Maintenance Window. |preMaintenanceWindowStartTime| Start Time for the Pre Maintenance Window. ManagedDiskParameters The parameters of a managed disk. |Name||Type||Description| |diskEncryptionSet| Specifies the customer managed disk encryption set resource id for the managed disk. |id| Resource Id |securityProfile| Specifies the security profile for the managed disk. |storageAccountType| Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk. NetworkApiVersion specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations |Name||Type||Description| |2020-11-01| NetworkInterfaceReference Describes a network interface reference. |Name||Type||Description| |id| Resource Id |properties.deleteOption| Specify what happens to the network interface when the VM is deleted |properties.primary| Specifies the primary network interface in case the virtual machine has more than 1 network interface. NetworkProfile Specifies the network interfaces or the networking configuration of the virtual machine. |Name||Type||Description| |networkApiVersion| specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations |networkInterfaceConfigurations| Specifies the networking configurations that will be used to create the virtual machine networking resources. |networkInterfaces| Specifies the list of resource Ids for the network interfaces associated with the virtual machine. OperatingSystemTypes The operating system of the osDiskImage. |Name||Type||Description| |Linux| |Windows| OSDisk Specifies information about the operating system disk used by the virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines. |Name||Type||Description| |caching| Specifies the caching requirements. |createOption| Specifies how the virtual machine should be created. |deleteOption| Specifies whether OS Disk should be deleted or detached upon VM deletion. |diffDiskSettings| Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine. |diskSizeGB| Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. |encryptionSettings| Specifies the encryption settings for the OS Disk. |image| The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist. |managedDisk| The managed disk parameters. |name| The disk name. |osType| This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. |vhd| The virtual hard disk. |writeAcceleratorEnabled| Specifies whether writeAccelerator should be enabled or disabled on the disk. OSProfile Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned. |Name||Type||Description| |adminPassword| Specifies the password of the administrator account. |adminUsername| Specifies the name of the administrator account. |allowExtensionOperations| Specifies whether extension operations should be allowed on the virtual machine. |computerName| Specifies the host OS name of the virtual machine. |customData| Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. |linuxConfiguration| Specifies the Linux operating system settings on the virtual machine. |requireGuestProvisionSignal| Specifies whether the guest provision signal is required to infer provision success of the virtual machine. Note: This property is for private testing only, and all customers must not set the property to false. |secrets| Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual machine it is recommended to use the Azure Key Vault virtual machine extension for Linux or the Azure Key Vault virtual machine extension for Windows. |windowsConfiguration| Specifies Windows operating system settings on the virtual machine. PassNames The pass name. Currently, the only allowable value is OobeSystem. |Name||Type||Description| |OobeSystem| PatchOperationStatus The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings." |Name||Type||Description| |CompletedWithWarnings| |Failed| |InProgress| |Succeeded| |Unknown| PatchSettings Specifies settings related to VM Guest Patching on Windows. |Name||Type||Description| |assessmentMode| Specifies the mode of VM Guest patch assessment for the IaaS virtual machine. |enableHotpatching| Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'. |patchMode| Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible. Plan Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save. |Name||Type||Description| |name| The plan ID. |product| Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element. |promotionCode| The promotion code. |publisher| The publisher ID. ProtocolTypes Specifies the protocol of WinRM listener. Possible values are: http https |Name||Type||Description| |Http| |Https| PublicIPAddressSku Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible. |Name||Type||Description| |name| Specify public IP sku name |tier| Specify public IP sku tier PublicIPAddressSkuName Specify public IP sku name |Name||Type||Description| |Basic| |Standard| PublicIPAddressSkuTier Specify public IP sku tier |Name||Type||Description| |Global| |Regional| PublicIPAllocationMethod Specify the public IP allocation type |Name||Type||Description| |Dynamic| |Static| ResourceIdentityType The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine. |Name||Type||Description| |None| |SystemAssigned| |SystemAssigned, UserAssigned| |UserAssigned| ScheduledEventsProfile |Name||Type||Description| |terminateNotificationProfile| Specifies Terminate Scheduled Event related configurations. securityEncryptionTypes Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. NOTE: It can be set for only Confidential VMs. |Name||Type||Description| |DiskWithVMGuestState| |VMGuestStateOnly| SecurityProfile Specifies the Security profile settings for the virtual machine or virtual machine scale set. |Name||Type||Description| |encryptionAtHost| This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. |securityType| Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. |uefiSettings| Specifies the security settings like secure boot and vTPM used while creating the virtual machine. SecurityTypes Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. Default: UefiSettings will not be enabled unless this property is set. |Name||Type||Description| |ConfidentialVM| |TrustedLaunch| SettingNames Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon. |Name||Type||Description| |AutoLogon| |FirstLogonCommands| SshConfiguration SSH configuration for Linux based VMs running on Azure |Name||Type||Description| |publicKeys| The list of SSH public keys used to authenticate with linux based VMs. SshPublicKey Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed. |Name||Type||Description| |keyData| SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. |path| Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys StatusLevelTypes The level code. |Name||Type||Description| |Error| |Info| |Warning| StorageAccountTypes Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk. |Name||Type||Description| |Premium_LRS| |Premium_ZRS| |StandardSSD_LRS| |StandardSSD_ZRS| |Standard_LRS| |UltraSSD_LRS| StorageProfile Specifies the storage settings for the virtual machine disks. |Name||Type||Description| |dataDisks| Specifies the parameters that are used to add a data disk to a virtual machine. |imageReference| Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. |osDisk| Specifies information about the operating system disk used by the virtual machine. SubResource |Name||Type||Description| |id| Resource Id TerminateNotificationProfile |Name||Type||Description| |enable| Specifies whether the Terminate Scheduled event is enabled or disabled. |notBeforeTimeout| Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M) UefiSettings Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01 |Name||Type||Description| |secureBootEnabled| Specifies whether secure boot should be enabled on the virtual machine. |vTpmEnabled| Specifies whether vTPM should be enabled on the virtual machine. UserAssignedIdentities The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. |Name||Type||Description| VaultCertificate Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM. |Name||Type||Description| |certificateStore| For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. |certificateUrl| This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see Add a key or secret to the key vault. In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: VaultSecretGroup Describes a set of certificates which are all in the same Key Vault. |Name||Type||Description| |sourceVault| The relative URL of the Key Vault containing all of the certificates in VaultCertificates. |vaultCertificates| The list of key vault references in SourceVault which contain certificates. VirtualHardDisk Describes the uri of a disk. |Name||Type||Description| |uri| Specifies the virtual hard disk's uri. VirtualMachine Describes a Virtual Machine. |Name||Type||Description| |extendedLocation| The extended location of the Virtual Machine. |id| Resource Id |identity| The identity of the virtual machine, if configured. |location| Resource location |name| Resource name |plan| Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save. |properties.additionalCapabilities| Specifies additional capabilities enabled or disabled on the virtual machine. |properties.applicationProfile| Specifies the gallery applications that should be made available to the VM/VMSS |properties.availabilitySet| Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see Availability sets overview. |properties.billingProfile| Specifies the billing related details of a Azure Spot virtual machine. |properties.capacityReservation| Specifies information about the capacity reservation that is used to allocate virtual machine. |properties.diagnosticsProfile| Specifies the boot diagnostic settings state. |properties.evictionPolicy| Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. |properties.extensionsTimeBudget| Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). |properties.hardwareProfile| Specifies the hardware settings for the virtual machine. |properties.host| Specifies information about the dedicated host that the virtual machine resides in. |properties.hostGroup| Specifies information about the dedicated host group that the virtual machine resides in. |properties.instanceView| The virtual machine instance view. |properties.licenseType| Specifies that the image or disk that is being used was licensed on-premises. |properties.networkProfile| Specifies the network interfaces of the virtual machine. |properties.osProfile| Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned. |properties.platformFaultDomain| Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. Minimum api‐version: 2020‐12‐01 |properties.priority| Specifies the priority for the virtual machine. |properties.provisioningState| The provisioning state, which only appears in the response. |properties.proximityPlacementGroup| Specifies information about the proximity placement group that the virtual machine should be assigned to. |properties.scheduledEventsProfile| Specifies Scheduled Event related configurations. |properties.securityProfile| Specifies the Security related profile settings for the virtual machine. |properties.storageProfile| Specifies the storage settings for the virtual machine disks. |properties.timeCreated| Specifies the time at which the Virtual Machine resource was created. |properties.userData| UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. |properties.virtualMachineScaleSet| Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. |properties.vmId| Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands. |resources| The virtual machine child extension resources. |tags| Resource tags |type| Resource type |zones| The virtual machine zones. VirtualMachineAgentInstanceView The instance view of the VM Agent running on the virtual machine. |Name||Type||Description| |extensionHandlers| The virtual machine extension handler instance view. |statuses| The resource status information. |vmAgentVersion| The VM Agent full version. VirtualMachineEvictionPolicyTypes Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview. |Name||Type||Description| |Deallocate| |Delete| VirtualMachineExtension Describes a Virtual Machine Extension. |Name||Type||Description| |id| Resource Id |location| Resource location |name| Resource name |properties.autoUpgradeMinorVersion| Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. |properties.enableAutomaticUpgrade| Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available. |properties.forceUpdateTag| How the extension handler should be forced to update even if the extension configuration has not changed. |properties.instanceView| The virtual machine extension instance view. |properties.protectedSettings| The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. |properties.protectedSettingsFromKeyVault| The extensions protected settings that are passed by reference, and consumed from key vault |properties.provisioningState| The provisioning state, which only appears in the response. |properties.publisher| The name of the extension handler publisher. |properties.settings| Json formatted public settings for the extension. |properties.suppressFailures| Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false. |properties.type| Specifies the type of the extension; an example is "CustomScriptExtension". |properties.typeHandlerVersion| Specifies the version of the script handler. |tags| Resource tags |type| Resource type VirtualMachineExtensionHandlerInstanceView The instance view of a virtual machine extension handler. |Name||Type||Description| |status| The extension handler status. |type| Specifies the type of the extension; an example is "CustomScriptExtension". |typeHandlerVersion| Specifies the version of the script handler. VirtualMachineExtensionInstanceView The instance view of a virtual machine extension. |Name||Type||Description| |name| The virtual machine extension name. |statuses| The resource status information. |substatuses| The resource status information. |type| Specifies the type of the extension; an example is "CustomScriptExtension". |typeHandlerVersion| Specifies the version of the script handler. VirtualMachineHealthStatus The health status of the VM. |Name||Type||Description| |status| The health status information for the VM. VirtualMachineIdentity Identity for the virtual machine. |Name||Type||Description| |principalId| The principal id of virtual machine identity. This property will only be provided for a system assigned identity. |tenantId| The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity. |type| The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine. |userAssignedIdentities| The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. VirtualMachineInstanceView The instance view of a virtual machine. |Name||Type||Description| |assignedHost| Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. |bootDiagnostics| Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. |computerName| The computer name assigned to the virtual machine. |disks| The virtual machine disk information. |extensions| The extensions information. |hyperVGeneration| Specifies the HyperVGeneration Type associated with a resource |maintenanceRedeployStatus| The Maintenance Operation status on the virtual machine. |osName| The Operating System running on the virtual machine. |osVersion| The version of Operating System running on the virtual machine. |patchStatus| [Preview Feature] The status of virtual machine patch operations. |platformFaultDomain| Specifies the fault domain of the virtual machine. |platformUpdateDomain| Specifies the update domain of the virtual machine. |rdpThumbPrint| The Remote desktop certificate thumbprint. |statuses| The resource status information. |vmAgent| The VM Agent running on the virtual machine. |vmHealth| The health status for the VM. VirtualMachineIpTag Contains the IP tag associated with the public IP address. |Name||Type||Description| |ipTagType| IP tag type. Example: FirstPartyUsage. |tag| IP tag associated with the public IP. Example: SQL, Storage etc. VirtualMachineNetworkInterfaceConfiguration Describes a virtual machine network interface configurations. |Name||Type||Description| |name| The network interface configuration name. |properties.deleteOption| Specify what happens to the network interface when the VM is deleted |properties.dnsSettings| The dns settings to be applied on the network interfaces. |properties.dscpConfiguration| |properties.enableAcceleratedNetworking| Specifies whether the network interface is accelerated networking-enabled. |properties.enableFpga| Specifies whether the network interface is FPGA networking-enabled. |properties.enableIPForwarding| Whether IP forwarding enabled on this NIC. |properties.ipConfigurations| Specifies the IP configurations of the network interface. |properties.networkSecurityGroup| The network security group. |properties.primary| Specifies the primary network interface in case the virtual machine has more than 1 network interface. VirtualMachineNetworkInterfaceDnsSettingsConfiguration Describes a virtual machines network configuration's DNS settings. |Name||Type||Description| |dnsServers| List of DNS servers IP addresses VirtualMachineNetworkInterfaceIPConfiguration Describes a virtual machine network profile's IP configuration. |Name||Type||Description| |name| The IP configuration name. |properties.applicationGatewayBackendAddressPools| Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway. |properties.applicationSecurityGroups| Specifies an array of references to application security group. |properties.loadBalancerBackendAddressPools| Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer]. |properties.primary| Specifies the primary network interface in case the virtual machine has more than 1 network interface. |properties.privateIPAddressVersion| Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'. |properties.publicIPAddressConfiguration| The publicIPAddressConfiguration. |properties.subnet| Specifies the identifier of the subnet. VirtualMachinePatchStatus The status of virtual machine patch operations. |Name||Type||Description| |availablePatchSummary| The available patch summary of the latest assessment operation for the virtual machine. |configurationStatuses| The enablement status of the specified patchMode |lastPatchInstallationSummary| The installation summary of the latest installation operation for the virtual machine. VirtualMachinePriorityTypes Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01 |Name||Type||Description| |Low| |Regular| |Spot| VirtualMachinePublicIPAddressConfiguration Describes a virtual machines IP Configuration's PublicIPAddress configuration |Name||Type||Description| |name| The publicIP address configuration name. |properties.deleteOption| Specify what happens to the public IP address when the VM is deleted |properties.dnsSettings| The dns settings to be applied on the publicIP addresses . |properties.idleTimeoutInMinutes| The idle timeout of the public IP address. |properties.ipTags| The list of IP tags associated with the public IP address. |properties.publicIPAddressVersion| Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'. |properties.publicIPAllocationMethod| Specify the public IP allocation type |properties.publicIPPrefix| The PublicIPPrefix from which to allocate publicIP addresses. |sku| Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible. VirtualMachinePublicIPAddressDnsSettingsConfiguration Describes a virtual machines network configuration's DNS settings. |Name||Type||Description| |domainNameLabel| The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the domain name label and vm network profile unique ID. VirtualMachineSizeTypes Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. Recommended way to get the list of available sizes is using these APIs: List all available virtual machine sizes in an availability set List all available virtual machine sizes in a region List all available virtual machine sizes for resizing. For more information about virtual machine sizes, see Sizes for virtual machines. The available VM sizes depend on region and availability set. |Name||Type||Description| |Basic_A0| |Basic_A1| |Basic_A2| |Basic_A3| |Basic_A4| |Standard_A0| |Standard_A1| |Standard_A10| |Standard_A11| |Standard_A1_v2| |Standard_A2| |Standard_A2_v2| |Standard_A2m_v2| |Standard_A3| |Standard_A4| |Standard_A4_v2| |Standard_A4m_v2| |Standard_A5| |Standard_A6| |Standard_A7| |Standard_A8| |Standard_A8_v2| |Standard_A8m_v2| |Standard_A9| |Standard_B1ms| |Standard_B1s| |Standard_B2ms| |Standard_B2s| |Standard_B4ms| |Standard_B8ms| |Standard_D1| |Standard_D11| |Standard_D11_v2| |Standard_D12| |Standard_D12_v2| |Standard_D13| |Standard_D13_v2| |Standard_D14| |Standard_D14_v2| |Standard_D15_v2| |Standard_D16_v3| |Standard_D16s_v3| |Standard_D1_v2| |Standard_D2| |Standard_D2_v2| |Standard_D2_v3| |Standard_D2s_v3| |Standard_D3| |Standard_D32_v3| |Standard_D32s_v3| |Standard_D3_v2| |Standard_D4| |Standard_D4_v2| |Standard_D4_v3| |Standard_D4s_v3| |Standard_D5_v2| |Standard_D64_v3| |Standard_D64s_v3| |Standard_D8_v3| |Standard_D8s_v3| |Standard_DS1| |Standard_DS11| |Standard_DS11_v2| |Standard_DS12| |Standard_DS12_v2| |Standard_DS13| |Standard_DS13-2_v2| |Standard_DS13-4_v2| |Standard_DS13_v2| |Standard_DS14| |Standard_DS14-4_v2| |Standard_DS14-8_v2| |Standard_DS14_v2| |Standard_DS15_v2| |Standard_DS1_v2| |Standard_DS2| |Standard_DS2_v2| |Standard_DS3| |Standard_DS3_v2| |Standard_DS4| |Standard_DS4_v2| |Standard_DS5_v2| |Standard_E16_v3| |Standard_E16s_v3| |Standard_E2_v3| |Standard_E2s_v3| |Standard_E32-16_v3| |Standard_E32-8s_v3| |Standard_E32_v3| |Standard_E32s_v3| |Standard_E4_v3| |Standard_E4s_v3| |Standard_E64-16s_v3| |Standard_E64-32s_v3| |Standard_E64_v3| |Standard_E64s_v3| |Standard_E8_v3| |Standard_E8s_v3| |Standard_F1| |Standard_F16| |Standard_F16s| |Standard_F16s_v2| |Standard_F1s| |Standard_F2| |Standard_F2s| |Standard_F2s_v2| |Standard_F32s_v2| |Standard_F4| |Standard_F4s| |Standard_F4s_v2| |Standard_F64s_v2| |Standard_F72s_v2| |Standard_F8| |Standard_F8s| |Standard_F8s_v2| |Standard_G1| |Standard_G2| |Standard_G3| |Standard_G4| |Standard_G5| |Standard_GS1| |Standard_GS2| |Standard_GS3| |Standard_GS4| |Standard_GS4-4| |Standard_GS4-8| |Standard_GS5| |Standard_GS5-16| |Standard_GS5-8| |Standard_H16| |Standard_H16m| |Standard_H16mr| |Standard_H16r| |Standard_H8| |Standard_H8m| |Standard_L16s| |Standard_L32s| |Standard_L4s| |Standard_L8s| |Standard_M128-32ms| |Standard_M128-64ms| |Standard_M128ms| |Standard_M128s| |Standard_M64-16ms| |Standard_M64-32ms| |Standard_M64ms| |Standard_M64s| |Standard_NC12| |Standard_NC12s_v2| |Standard_NC12s_v3| |Standard_NC24| |Standard_NC24r| |Standard_NC24rs_v2| |Standard_NC24rs_v3| |Standard_NC24s_v2| |Standard_NC24s_v3| |Standard_NC6| |Standard_NC6s_v2| |Standard_NC6s_v3| |Standard_ND12s| |Standard_ND24rs| |Standard_ND24s| |Standard_ND6s| |Standard_NV12| |Standard_NV24| |Standard_NV6| VMDiskSecurityProfile Specifies the security profile settings for the managed disk. NOTE: It can only be set for Confidential VMs |Name||Type||Description| |diskEncryptionSet| Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob. |securityEncryptionType| Specifies the EncryptionType of the managed disk. VMGalleryApplication Specifies the required information to reference a compute gallery application version |Name||Type||Description| |configurationReference| Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided |order| Optional, Specifies the order in which the packages have to be installed |packageReferenceId| Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version} |tags| Optional, Specifies a passthrough value for more generic context. VMSizeProperties Specifies VM Size Property settings on the virtual machine. |Name||Type||Description| |vCPUsAvailable| Specifies the number of vCPUs available for the VM. |vCPUsPerCore| Specifies the vCPU to physical core ratio. WindowsConfiguration Specifies Windows operating system settings on the virtual machine. |Name||Type||Description| |additionalUnattendContent| Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. |enableAutomaticUpdates| Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. |patchSettings| [Preview Feature] Specifies settings related to VM Guest Patching on Windows. |provisionVMAgent| Indicates whether virtual machine agent should be provisioned on the virtual machine. |timeZone| Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". |winRM| Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell. WindowsPatchAssessmentMode Specifies the mode of VM Guest patch assessment for the IaaS virtual machine. Possible values are: ImageDefault - You control the timing of patch assessments on a virtual machine. AutomaticByPlatform - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. |Name||Type||Description| |AutomaticByPlatform| |ImageDefault| WindowsVMGuestPatchMode Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible. Possible values are: Manual - You control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false AutomaticByOS - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. AutomaticByPlatform - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true |Name||Type||Description| |AutomaticByOS| |AutomaticByPlatform| |Manual| WinRMConfiguration Describes Windows Remote Management configuration of the VM |Name||Type||Description| |listeners| The list of Windows Remote Management listeners WinRMListener Describes Protocol and thumbprint of Windows Remote Management listener |Name||Type||Description| |certificateUrl| This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see Add a key or secret to the key vault. In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: |protocol| Specifies the protocol of WinRM listener.