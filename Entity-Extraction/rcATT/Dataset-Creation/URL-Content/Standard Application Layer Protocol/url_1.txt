Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic. In the mobile environment, the Google Cloud Messaging (GCM; two-way) and Apple Push Notification Service (APNS; one-way server-to-device) are commonly used protocols on Android and iOS respectively that would blend in with routine device traffic and are difficult for enterprises to inspect. Google reportedly responds to reports of abuse by blocking access to GCM.[1] |ID||Name||Description| |S0525||Android/AdDisplay.Ashas| Android/AdDisplay.Ashas has communicated with the C2 server using HTTP.[2] |S0304||Android/Chuli.A| Android/Chuli.A used HTTP uploads to a URL as a command and control mechanism.[3] |S0540||Asacub| Asacub has communicated with the C2 using HTTP POST requests.[4] |S0432||Bread| Bread communicates with the C2 server using HTTP requests.[5] |S0480||Cerberus| Cerberus communicates with the C2 server using HTTP.[6] |S0555||CHEMISTGAMES| CHEMISTGAMES has used HTTPS for C2 communication.[7] |S0426||Concipit1248| Concipit1248 communicates with the C2 server using HTTP requests.[8] |S0425||Corona Updates| Corona Updates communicates with the C2 server using HTTP requests and has exfiltrated data using FTP.[8] |G0070||Dark Caracal| Dark Caracal controls implants using standard HTTP communication.[9] |S0479||DEFENSOR ID| DEFENSOR ID has used Firebase Cloud Messaging for C2.[10] |S0550||DoubleAgent| DoubleAgent has used both FTP and TCP sockets for data exfiltration.[11] |S0507||eSurv| eSurv has exfiltrated data using HTTP PUT requests.[12] |S0478||EventBot| EventBot communicates with the C2 using HTTP requests.[13] |S0522||Exobot| Exobot has used HTTPS for C2 communication.[14] |S0405||Exodus| Exodus One checks in with the command and control server using HTTP POST requests.[15] |S0509||FakeSpy| FakeSpy exfiltrates data using HTTP requests.[16] |S0535||Golden Cup| Golden Cup has communicated with the C2 using MQTT and HTTP.[17] |S0551||GoldenEagle| GoldenEagle has exfiltrated data via both SMTP and HTTP and used HTTP POST requests for C2.[11] |S0421||GolfSpy| GolfSpy exfiltrates data using HTTP POST requests.[18] |S0536||GPlayed| GPlayed has communicated with the C2 using HTTP requests or WebSockets as a backup.[19] |S0406||Gustuff| Gustuff communicates with the command and control server using HTTP requests.[20] |S0463||INSOMNIA| INSOMNIA communicates with the C2 server using HTTPS requests.[21] |S0399||Pallas| Pallas exfiltrates data using HTTP.[9] |S0539||Red Alert 2.0| Red Alert 2.0 has communicated with the C2 using HTTP.[22] |S0326||RedDrop| RedDrop uses standard HTTP for communication and exfiltration.[23] |S0403||Riltok| Riltok communicates with the command and control server using HTTP requests.[24] |S0411||Rotexy| Rotexy can communicate with the command and control server using JSON payloads sent in HTTP POST request bodies. It can also communicate by using JSON messages sent through Google Cloud Messaging.[25] |S0313||RuMMS| RuMMS uses HTTP for command and control.[26] |S0549||SilkBean| SilkBean has used HTTPS for C2 communication.[11] |S0327||Skygofree| Skygofree can be controlled via HTTP, XMPP, FirebaseCloudMessaging, or GoogleCloudMessaging in older versions.[27] |S0424||Triada| Triada utilized HTTP to exfiltrate data through POST requests to the command and control server.[28] |S0427||TrickMo| TrickMo communicates with the C2 by sending JSON objects over unencrypted HTTP requests.[29] |S0307||Trojan-SMS.AndroidOS.Agent.ao| Trojan-SMS.AndroidOS.Agent.ao uses Google Cloud Messaging (GCM) for command and control.[1] |S0306||Trojan-SMS.AndroidOS.FakeInst.a| Trojan-SMS.AndroidOS.FakeInst.a uses Google Cloud Messaging (GCM) for command and control.[1] |S0308||Trojan-SMS.AndroidOS.OpFake.a| Trojan-SMS.AndroidOS.OpFake.a uses Google Cloud Messaging (GCM) for command and control.[1] |S0418||ViceLeaker| ViceLeaker uses HTTP for C2 communication and data exfiltration.[30][31] |S0490||XLoader for iOS| XLoader for iOS has exfiltrated data using HTTP requests.[32] This type of attack technique cannot be easily mitigated with preventive controls since it is based on the abuse of system features.